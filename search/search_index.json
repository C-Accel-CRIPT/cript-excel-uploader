{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"CRIPT Excel Uploader","text":"<p>CRIPT Excel Uploader: Currently Unsupported</p> <p>Due to recent technical advancements to our platform, we have suspended support for the Excel Uploader,  including its code, template, and documentation. We may reinstate support for it in the future, but at present,  it remains unsupported.</p> <p>We understand that this may be inconvenient for some users, and we apologize for any disruption this may cause. We recommend using the following alternative solutions to upload data to CRIPT:</p> <ul> <li>The CRIPT Python SDK</li> <li>The CRIPT online editor</li> </ul> <p>We appreciate your understanding and cooperation. We will keep you informed of any changes to the status of the Excel Uploader.</p>"},{"location":"#usage","title":"Usage","text":""},{"location":"#follow-these-steps","title":"Follow these steps","text":"<ol> <li>     Login or Signup for the CRIPT platform </li> <li>     Create a Project inside the      CRIPT platform <ul> <li>         A Project can be thought of as a bunch of folders each containing experiments that contribute to a single project       </li> <li>         Essentially, the project can be thought of as a folder that holds Collection nodes       </li> <li>         A Project is needed because each Collection belongs inside of a Project       </li> </ul> </li> <li>     Create a Collection inside the      CRIPT platform <ul> <li>          A Collection can be thought of as a binder filled with experiments       </li> <li>         The entire Excel file will become a collection within the CRIPT Platform       </li> </ul> </li> <li>     Download the              CRIPT Excel Template      <ul> <li>           The CRIPT Excel Template can be used to directly record data in the file       </li> <li>           The CRIPT Excel Template contains formulas and validations that makes recording data much easier       </li> <li>         The                     CRIPT Example Excel Template                  can serve as an example Excel file for users to see the overall flow and structure of the Excel file       </li> </ul> </li> <li>     Input your data into the CRIPT Excel template     <ul> <li>         Refer to structure of Excel sheet          to understand rows 1-4 of every sheet       </li> <li>         Refer to individual sheets to see the options for each sheet       </li> </ul> </li> <li> Download the latest CRIPT Excel Uploader executable     <ul> <li>         Please visit the Excel Uploader Downloads </li> <li>         The best place that can guarantee the latest version of the Excel uploader is always on our GitHub, under the          latest released assets </li> </ul> <li>     Run CRIPT Excel Uploader     <ul> <li>         Please visit Downloads for instructions       </li> </ul> </li>"},{"location":"downloads/","title":"Downloads","text":"<p>All the resources for the Excel Uploader can be downloaded here</p> <p>The CRIPT Excel Uploader has 2 required parts, an Excel template and Excel Uploader executable.</p>"},{"location":"downloads/#required","title":"Required","text":"<ol> <li> <p> CRIPT Excel Template</p> </li> <li> <p>Download Excel Uploader executable</p>  Windows Mac Linux Terminal Option <p> Windows executable</p> <ol> <li>Download  Mac executable</li> <li>In the terminal run <code>chmod +x excel_uploader_mac</code></li> <li>Double-click on excel_uploader_mac.app to run it</li> </ol> <ol> <li>Download  Linux executable</li> <li>In the terminal run <code>chmod +x excel_uploader_linux</code></li> <li>Double-click on excel_uploader to run it</li> </ol> <p>Please visit the Terminal Option page</p> </li> </ol>"},{"location":"downloads/#optional","title":"Optional","text":"<ul> <li> CRIPT Example Excel Template</li> </ul>"},{"location":"downloads/#release-notes","title":"Release Notes","text":"<p>For the latest changes to the CRIPT Excel Uploader program or the CRIPT Excel Uploader Template,  please visit the       CRIPT Excel Uploader GitHub releases page </p>"},{"location":"excel_rows/","title":"Excel Rows","text":"<p> Row 1 Row 2 Row 3 Row 4 </p> <p></p> <p>The Row 1 - 4 within each Excel sheet are treated differently than Rows 5 - \u221e. </p> <p>The CRIPT Excel Uploader reads row 1 - 3, and will skip row 4 as row 4 is human instructions and the program does not need them. User input can only start from row 5</p> <p>Please refer to Individual Excel Sheets  for a complete breakdown of each sheet</p>"},{"location":"excel_rows/#row-1-category","title":"Row 1: Category","text":"<p>Row 1 can be thought of as describing the abstract category of Row 2</p> <p></p>"},{"location":"excel_rows/#list-of-all-possible-options-for-row-1","title":"List of all possible options for Row 1","text":"<ul> <li>attribute<ul> <li>Column with simple key-value pairs</li> <li>A singular characteristic that a node/object has and it better describes the object</li> </ul> </li> <li>condition<ul> <li>The condition under which the property was found</li> <li>Some examples include <code>temperature</code>, <code>mixing_rate</code>, <code>stirring</code>, <code>time_duration</code></li> <li>Please visit    condition controlled vocabulary for a full list of conditions</li> </ul> </li> <li>identifier<ul> <li>Column with key-value pairs for material identifiers</li> <li>An example of an identifier can be <code>smiles</code>, <code>bigSmiles</code>, <code>cas</code>, etc.</li> <li>Please visit    material identifier controlled vocabulary for a full list of material identifiers</li> </ul> </li> <li>property<ul> <li>Column with key, value, and unit combinations for properties</li> </ul> </li> <li>relation<ul> <li>Column that shows a relationship between a row from one sheet to the row of another sheet</li> <li>relation is further explained in relation section</li> </ul> </li> <li>quantity<ul> <li>Column with key, value and unit combinations for quantities</li> <li>Column that describes the amount combined with a unit</li> </ul> </li> </ul> <p>Example of quantity in <code>process ingredients</code> sheet</p>        attribute             quantity             *name             volume             ml             water             5      <p></p>"},{"location":"excel_rows/#relation-field-in-row-1-explained","title":"relation field in row 1 explained","text":"<p>The row 1 field <code>relation</code> is essentially a way for a row from one sheet to reference another row in a different sheet.</p> <p>In computer science terms, we could think of it as a foreign key type of relationship from the <code>relation</code> row of one sheet to the <code>*name</code> row of another sheet, the name field works well as an identifier because we are requiring names to be unique within a given sheet.</p> <p></p> <p></p>"},{"location":"excel_rows/#row-2-column-name","title":"Row 2: Column Name","text":"<p>This can be seen as the label for each column</p> <p>The breakdown can be found in Individual Excel Sheets</p> <p></p> <ul> <li>       Columns beginning with <code>*</code> are required (eg. <code>*name</code>)     </li> <li>       Columns beginning with <code>#</code> will be ignored (eg. <code>#storage</code>)       <ul> <li> <code>#</code> columns are a good idea to use if you want to have some notes, but don't want it necessarily read or uploaded to CRIPT         </li> </ul> </li> <li>         Some sheets have dropdowns for row 2.          After selecting an option, row 1, row 3, and row 4 are automatically populated with the correct information                      As we continue to update the controlled vocabulary,             it is very possible that the dropdown options and autofill can become outdated.          </li> <li>         Each Excel sheet has row 1, 3, 4 locked and the sheets are protected.         <ul> <li>                 This is because rows 1, 3, 4 contain formulas that if accidentally deleted or overwritten                  would break the autofill feature              </li> <li>                 The sheets are protected without a password and can be easily unprotected             </li> </ul> </li> </ul> <p></p> <p></p>"},{"location":"excel_rows/#nesting-headers-for-each-column-in-row-2","title":"Nesting Headers for each column in row 2","text":"<ul> <li>We can have more than one field present on a column header if needed<ul> <li>We can indicate that we are recording the <code>density</code> at a certain <code>temperature</code> by using a colon <code>\":\"</code> and notating   it like this: <code>\"density:temperature\"</code></li> <li>Examples<ul> <li>Define a material property method: <code>density:method</code></li> <li>Associate data with a process condition <code>temperature:data</code></li> <li>Associate a citation with a material property: <code>density:citation</code></li> <li>Define material property condition: <code>density:temperature</code></li> <li>Define the uncertainty of a material property condition: <code>density:temperature:uncertainty</code> <p><code>&lt;field&gt;:data</code> column values should derive from the <code>*name</code> column of the <code>Data</code> sheet. <code>&lt;field&gt;:citation</code> column values should derive from the <code>*name</code> column of the <code>Citation</code> sheet.</p> </li> </ul> </li> </ul> </li> </ul> <p></p>"},{"location":"excel_rows/#id-optional","title":"<code>Id</code>  - (optional)","text":"<p><code>Id</code> is used to allow for multiple measurements throughout time. With <code>Id</code> it is possible to take several measurements through an experiment, and later use nesting to record more details.</p> <p>If there are multiple densities throughout time, and we want to show each of their temperatures (or any other condition) we can use an <code>Id</code> field to differentiate between the different temperatures. We denote an <code>Id</code> with brackets and a number inside such as [1] or [2]. The <code>Id</code> is used to identify distinct properties/conditions of the same type</p> <ul> <li>e.g., To identify two density measurements at two different temperatures, we could create the following column   headers: [1]density, [1]density:temperature   , [2]density, [2]density:temperature</li> </ul> <p></p>        property             property:condition             property             property:condition             [1]density             [1]density:temperature             [2]density             [2]density:temperature               g/ml             degC               g/ml             degC             0.87             20             1             30      <p></p>"},{"location":"excel_rows/#row-3-units","title":"Row 3: Units","text":"<ul> <li> <p>Row 3: Defines the units for that column</p> <ul> <li><code>celsius</code>, <code>g/ml</code></li> <li>All the supported   units are documented within the Pint python package</li> </ul> </li> </ul> <p></p>"},{"location":"excel_rows/#row-4-instructions","title":"Row 4: Instructions","text":"<p>Many columns contain instructions on row 4 that tries to clarify the data that should go in  that column after the value for row 2 is picked</p>"},{"location":"excel_rows/#row-5-user-input","title":"Row 5 - \u221e : User Input","text":""},{"location":"excel_rows/#inputting-list-instead-of-a-single-value","title":"Inputting list instead of a single value","text":"<p>Some columns allow for more than a single value. List values must use a semicolon <code>;</code> as a separator</p> <p>Example:</p>        category             column name               units             instructions             funder 1; funder 2; funder 3; funder 4      <p></p>"},{"location":"excel_template/","title":"CRIPT Excel Template","text":""},{"location":"excel_template/#autofill","title":"Autofill","text":"<p>The Excel template comes with autofill feature. Users can now click on row 2 (column names) and pick from a list of available columns options that each sheet supports. Once an options is selected, row 1 (category), row 3 (unit), and row 4 (instructions) are populated based on the selected option. This way users do not need to consider any other details except what they want to record in the Excel sheets.</p> <p>The autofill feature is fairly new and has some drawbacks as well. Firstly, as controlled vocabulary is updated and changed within the CRIPT website,  the Excel sheets does not have the ability to get the newest vocabulary, is unaware of any updates to the CRIPT controlled vocabulary, and instead will keep the vocabulary that it came with at the time it was released.  This could result in the Excel sheet giving validation errors that your new key that you got from  CRIPT controlled vocabulary is not valid when in fact it is, but Excel is not aware of the changes on the CRIPT website, and therefore might give you false warnings.</p> <p>The dropdown list is very large but is not a comprehensive list of every single possible value for row 2 (column name), and there can be values that are valid, but are not contained in the dropdown options for the Excel file.</p> <p>For most complete and up-to-date list of vocabulary please always check the  CRIPT controlled vocabulary page.</p>"},{"location":"excel_template/#data-validation","title":"Data validation","text":"<p>To avoid any problems please do not copy, cut, paste, or drag cells with dropdown data validations into any other cell. The reason for this is that it could break the data validation for that cell and accidentally bring the value of that cell, its formulas, and data validation into another cell by accident and cause errors. </p> <p>There are also input messages that show on cells that contain data validation to help alert the user to not accidentally break it.</p> <p></p>"},{"location":"excel_template/#protected-sheets","title":"Protected sheets","text":"<p>The sheets are protected because rows 1, 3, and 4 contain formulas that we want to prevent the user from accidentally deleting them. If the user feels like they do not want/need the protection they can easily unlock the sheets as the Excel sheets protection do not contain any passwords. Unlocking the sheet can be done several ways but a convenient way is to right-click on the sheet and click unprotect sheet.</p> <p></p>"},{"location":"excel_template/#excel-online","title":"Excel Online","text":"<p>The dropdown list for many of the sheets can be rather large, the Microsoft Excel desktop team has announced that they are working on a searchable dropdown list, however, currently it is only available on Excel desktop beta. </p> <p>Microsoft also offers Excel Online that user can use for free, edit Excel files online, save instantly online, and work together at the same time. Excel online has currently implemented the searchable dropdown list that makes working with the Excel file much easier. Users can upload their Excel files to OneDrive and then edit their Excel files with Excel online to take full advantage of the searchable dropdown list.</p> <p></p>"},{"location":"faq/","title":"Frequently Asked Questions (FAQ)","text":"<ul> <li> <p>What happens if I run the uploader more than once?</p> <ul> <li>If the name of an object has not been changed, the existing object will be updated in the database. If the name has been changed, a new object will be created and the old will remain.</li> </ul> </li> <li> <p>I entered a number into a cell but the uploader says the value is a string. What gives?</p> <ul> <li>This is likely caused by the wrong value type being set for the given cell in the Excel document.</li> </ul> </li> <li> <p>What units can I use?</p> <ul> <li>Here is a list of the supported units from the Pint Python package.</li> </ul> </li> <li> <p>What if I have multiple measurements of the same thing?</p> <ul> <li>You can use an <code>ID</code> field in front of row 2 to separate out the different measurements more on that in the ID section of Row 2</li> </ul> </li> <li> <p>Does capitalization make a difference for units?</p> <ul> <li>Yes the units are very case-sensitive and the program will perceive KPa and kPa as two separate things and can cause errors and issues</li> </ul> </li> <li> <p>What do I need to use the Excel Uploader program?</p> <ul> <li>You will need to have chrome or chromium installed on your computer because Excel Uploader program runs on chrome/chromium</li> </ul> </li> <li> <p>How should I go about fixing errors when I run Excel Uploader program?</p> <ul> <li>Please be sure you have the latest Excel Uploader program for your operating system, and fix the errors from top down because often the errors that appear further down on the list are a result of the errors at the top of the list </li> </ul> </li> <li> <p>Are there additional resources to upload my data to CRIPT?</p> <ul> <li>You can try:<ol> <li>inputting your data directly into CRIPT via the user interface</li> <li>using the CRIPT Python SDK to programmatically upload your data to CRIPT</li> <li>getting existing CRIPT Scripts and CRIPT Sheets from criptscripts.org</li> </ol> </li> </ul> </li> </ul>"},{"location":"filling_out_first_screen/","title":"Filling Out the First Screen","text":""},{"location":"filling_out_first_screen/#host","title":"Host","text":"<p>Host indicates the CRIPT instance that you want to upload your data to whether that is CRIPT or a private instance</p> <p>For most users host will be <code>criptapp.org</code></p> <pre><code>host: criptapp.org\n</code></pre> <p></p> <p>However, if any user wants to connect to their own private instance of cript, they can easily do that by changing the host to whatever URL they are using</p> <p>Private Instance Example:</p> <pre><code>host: myPrivateWebsite.com\n</code></pre>"},{"location":"filling_out_first_screen/#api-token","title":"API Token","text":"<p>The token is needed because we need to authenticate the user before saving any of their data</p> <p></p> <p> </p> <p> Security Settings under the profile icon dropdown </p> <p></p> <p>To get your token:</p> <ol> <li>please visit your Security Settings under the profile    icon dropdown on    the top right</li> <li>Click on the copy button next to the API Token to copy it to clipboard</li> <li>Now you can paste it into the <code>API Token</code> field</li> </ol> <p>Note: The \"Token\" in front of the random characters is part of the token as well</p> <p></p> <p>Example:</p> <pre><code>API Token: Token 4abc478b25e30766652f76103b978349c4c4b214\n</code></pre>"},{"location":"filling_out_first_screen/#project-name","title":"Project Name","text":"<p>Project is needed for the software to know which project these experiments are for, and each Collection belongs to a Project</p> <p>A Project can be thought of as a bunch of folders each containing experiments that contribute to a single project</p> <p></p> <p> projects tab within CRIPT </p> <p></p> <p>To get project name, follow these steps:</p> <ol> <li>Navigate to the projects tab within CRIPT</li> <li>Find the project you want to upload your data under</li> <li>Copy the name and paste it into <code>Project Name</code> field</li> </ol> <p>Example:</p> <pre><code>Project Name: CRIPT Examples\n</code></pre>"},{"location":"filling_out_first_screen/#collection-name","title":"Collection Name","text":"<p>A Collection can be thought of as a binder filled with experiments</p> <p>The entire Excel file will become a collection within the CRIPT Platform</p> <p></p> <p></p> <p> Collections tab within CRIPT </p> <p></p> <p>To get your collection name, follow these steps:</p> <ol> <li>Please visit the collections tab within CRIPT</li> <li>Find the collection you want to use</li> <li>copy the name of that collection and paste it into the <code>Collection Name</code> field</li> </ol> <p>Example:</p> <pre><code>Collection Name: Tutorial\n</code></pre>"},{"location":"filling_out_first_screen/#excel-file","title":"Excel File","text":"<p>Please click the purple Excel File button and select the Excel file you wish to upload to CRIPT</p> <p> </p>"},{"location":"globus/","title":"Globus Authentication","text":""},{"location":"globus/#globus-screen-conditions","title":"Globus Screen Conditions","text":"<p>The Globus Authentication for Local File Uploads screen is required if:</p> <ul> <li>You indicate on the <code>Excel file &gt; data sheet &gt; *source column</code> that you are uploading a local file from your computer to CRIPT via inputting an absolute path of a file on your computer.</li> </ul> <p>The program may skip this screen completely if: </p> <ol> <li>The <code>*source</code> column is empty indicating you are not uploading any files</li> <li>All inputs under the *source column are only web URLs</li> </ol> Storing Web files vs local files <p>CRIPT uses Globus to store uploaded local files from your computer. </p> <p>Authentication is not required with Globus when inputting links to web files under the <code>*source</code> column because CRIPT will only point to the links and not upload the linked files to CRIPT. </p>"},{"location":"globus/#globus-website","title":"Globus Website","text":"<p>Please provide a label in the field labeled \u201cProvide a label for future reference\u201d within the Globus Authentication page. The label is insignificant for our uses and can be anything you like, and then click the <code>Allow</code> button.</p> <p></p> <p>Please copy the Authorization code and enter it into the Excel Uploader and click submit to continue</p> <p></p>"},{"location":"individual_sheets/","title":"Customizing the Excel Sheets","text":"<ul> <li> <p>Required sheets are colored    Orange </p> </li> <li> <p>Optional sheets are colored    Grey </p> </li> </ul> <p></p> <p>Any optional column not needed can be left blank or deleted</p> <p>Sheets CANNOT be renamed, but sheets CAN be removed</p> <p></p>"},{"location":"individual_sheets/#the-general-structure-for-all-sheets","title":"The general structure for all sheets","text":"Category                             Column Name                             units                         Instructions                     Your Values"},{"location":"individual_sheets/#sheets","title":"Sheets","text":""},{"location":"individual_sheets/#material-sheet","title":"material sheet","text":"<p>This sheet is for both materials used at the beginning of the experiment (ingredients), and the material that occurs as a result of the experiment (process product)</p> <p></p> <p>Define all materials that will be referenced throughout the document.</p> <p>You can have as many material identifier and material property columns as you needed</p> Row 2 Row 1 Required Row 5 - \u221e expected value *name attribute yes unique name pick from <code>Name</code> column of material identifiers identifier no your values pick from <code>Name</code> column of material properties property no your values use_existing property no TRUE, FALSE, or blank notes attribute no regular text <p></p> <p>options for each row are clickable links in the chart below:</p>    each material you are using must have a unique name, no duplicates  <p>You can have as many <code>Identifiers</code>, <code>property</code>, <code>property:condition</code>, <code>property:method</code>, <code>property:type</code> as you need</p>        attribute             identifier             identifier             property             property:condition             property:method             property:type             property             attribute             *name        (Required) Material Identifiers (optional) Material Identifiers (optional) Material Property (optional) Material Property:       Condition (optional) Material Property:       Method (optional) Material Property:       Citation Type (optional)        use_existing        (optional)        notes        (optional)          units           (if needed) blank        your unique material name      Your values Your values Your values Your values Your method for calculating the property Citation for property        You can put either:        TRUE, FALSE, or you can leave blank for False Your notes use_existing <p><code>use_existing</code> column field is best for when you already have a material within your project and  you just want to name it and use it within your Excel file instead of creating a new material on every upload </p> <p></p> <p></p>"},{"location":"individual_sheets/#mixture-component-sheet-optional","title":"mixture component sheet (optional)","text":"<p>This sheet Defines the components of mixture materials.</p> Row 2 Row 1 Required Row 5 - \u221e expected value *mixture relation yes value from <code>*name</code> column of <code>material</code> sheet *material relation yes value from <code>*name</code> column of <code>material</code> sheet <p></p> relation relation        *mixture        (Required)        *material        (Required)        value comes from *name column of mixture sheet             value from *name column of materials sheet      <p></p>"},{"location":"individual_sheets/#experiment-sheet","title":"experiment sheet","text":"<p>This sheet defines the experiment</p> Row 2 Row 1 Required Row 5 - \u221e expected value *name attribute yes unique name funding attribute no list of your funders (e.g, <code>funder1; funder2; funder3</code>) notes attribute no regular text <p></p> <p>If there are multiple sources for funding please list them and separate each one with a <code>\";\"</code> (e.g, <code>Grants; NSF; IRIS</code>)</p> <p></p> attribute attribute attribute        *name        (Required)        funding         (optional)        notes         (optional)        unique experiment name             funder 1; funder 2; funder 3; funder 4;             These are my notes      <p></p>"},{"location":"individual_sheets/#process-sheet","title":"process sheet","text":"<p>Define the processes of each experiment.</p> <p>You can have as many process property and conditions columns as you need</p> Row 2 Row 1 Required Row 5 - \u221e expected value *experiment relation yes value from <code>*name</code>column of<code>experiment</code> sheet *name attribute yes unique name *type attribute yes pick from <code>Name</code> column of Process Type keywords attribute no list from <code>Name</code> column of Process keywords <code>(e.g, anionic; annealing_sol; annealing_thermo)</code> description attribute no regular text equipment attribute no list of equipments <code>(e.g, equipment1; equipment2; equipment3)</code> pick from <code>Name</code> column of process property property no record your values pick from <code>Name</code> column of conditions condition no record your values notes attribute no regular text <p></p> relation attribute attribute attribute attribute attribute property property:method property:condition condition condition attribute        *experiment        (Required)        *name         (Required)        *type         (Required)        keywords        (optional)        description        (optional)        equipment        (optional) process property (optional) property:       method (optional) property:       condition (optional) conditions (optional) conditions (optional)        notes        (optional) units units        value from *name column of experiment sheet             your unique process name      Process Type Process keywords        your description      equipment used        your values             your method for calculating this property             condition for the process property             100.0             55.26             your notes      <p> </p> <p>Example:</p> relation attribute attribute attribute attribute condition condition        *experiment        (Required)        *name         (Required)        *type         (Required)        keywords        (optional)        description        (optional)        temperature        (optional)        time_duration        (optional) degC min        value from *name column of experiment sheet             pick a unique process name             affinity_pure             anionic; annealing_sol; annealing_thermo             description of my process             100.0             55.26      <p></p>"},{"location":"individual_sheets/#process-equipment-sheet-optional","title":"process equipment sheet (optional)","text":"<p>Define the equipment used in a process.</p> <p>You can have as many Condition columns as you need</p> Row 2 Row 1 Required Row 5 - \u221e expected value *process relation yes value from <code>*name</code> column of <code>process</code> sheet *key attribute yes pick from <code>Name</code> column of equipments description attribute no regular text pick from <code>Name</code> column of Conditions condition no record your values citation relation no value from <code>*name</code> column of <code>citation</code> sheet <p></p> relation attribute attribute condition relation        *process        (Required)        *key        (Required)        description        (optional) condition (optional)          citation        (optional)        units              value from <code>*name</code> column of process sheet      select equipment        your description of the equipment             your description of the condition             value from <code>*name</code> column of citation sheet      <p></p>"},{"location":"individual_sheets/#prerequisite-process-sheet-optional","title":"prerequisite process sheet (optional)","text":"<p>Define the immediate prerequisites for each process.</p> <p>e.g., Assuming <code>A -&gt; B -&gt; C</code>, the immediate prerequisite of <code>C</code> is <code>B</code> (not <code>A</code>).</p> Row 2 Row 1 Required Row 5 - \u221e expected value *process relation yes value from <code>*name</code> column of <code>process</code> sheet *prerequisite relation yes value from <code>*name</code> column of <code>process</code> sheet <p></p> relation relation        *process        (Required)        *prerequisite        (Required)        value from *name of process sheet             value from *name of process sheet        immediate prerequisite step <p></p>"},{"location":"individual_sheets/#process-ingredient-sheet","title":"process ingredient sheet","text":"<p>Define the ingredients for each process and their respective quantities.</p> <p>you can have as many quantity columns as needed for your different materials</p> Row 2 Row 1 Required Row 5 - \u221e expected value *process relation yes value from <code>*name</code> column of <code>process</code> sheet *material relation yes value from <code>*name</code> column of <code>material</code> sheet *keyword attribute yes pick from <code>Name</code> column of ingredients pick from <code>Name</code> column of quantity quantity yes record your quantity here <p></p> relation relation attribute quantity quantity quantity        *process        (Required)        *material         (Required)        *keyword        (Required) quantity (optional) quantity (optional) quantity (optional) ml g mole         value comes from *name column of the process sheet             value comes from *name column of the materials sheet      ingredient keywords        5             0.455             10      <p></p>"},{"location":"individual_sheets/#process-product-sheet","title":"process product sheet","text":"<p>This sheet describes the resulting product after completing a process</p> <p></p> <p>Define the material products of each process.</p> Row 2 Row 1 Required Row 5 - \u221e expected value *process relation yes value from <code>*name</code>column of<code>process</code>sheet *material relation yes value from<code>*name</code>column of<code>material</code> sheet <p></p> relation relation        *process        (Required)        *material         (Required)         value comes from *name column of the process sheet             value comes from *name column of the materials sheet      <p></p>"},{"location":"individual_sheets/#data-sheet","title":"data sheet","text":"<p>This sheet defines the data files you want to upload to CRIPT, such as a csv file from a robot, an image, or any other type of file</p> <p></p> <p>Define the data sets you will be associating with properties, etc.</p> Row 2 Row 1 Required Row 5 - \u221e expected value *experiment relation yes value from <code>*name</code>column of<code>experiment</code>sheet *name attribute yes unique name *type attribute yes pick from <code>*name</code> column of data type *source attribute yes can either be a path to a local file on your computer or a url to a website sample_preparation relation no pick from <code>*name</code> column of <code>process</code> sheet <p></p> relation attribute attribute attribute relation        *experiment        (Required)        *name         (Required)        *type         (Required)        *source         (optional)        sample_preparation        (optional)         value from <code>*name</code> column of experiment sheet             Pick a unique name             My type      Can be either local:              C:\\Users\\myUsername\\Desktop\\MIT\\cript-excel-uploader\\example_template_v0-3-1.xlsx          Or on the web:               https://google.com                 pick a process from <code>*name</code> column of process sheet <p></p> <p></p>"},{"location":"individual_sheets/#citation-sheet","title":"citation sheet","text":"<p>This sheet can be used to reference any sources used in the experiments that you want to cite in CRIPT</p> <code>Row 1:</code> can only be an attribute <code>Row 2:</code> MUST have a title column, but ALL other columns are optional  <code>Row 3:</code> This row is left blank  <p></p> <p>Define references to be associated with properties, etc. as citations.</p> Row 2 Row 1 Required Row 5 - \u221e expected value *title attribute yes unique title doi attribute no text authors attribute no text journal attribute no text publisher attribute no text year attribute no number volume attribute no text issue attribute no text pages attribute no text issn attribute no text arxiv_id attribute no text pmid attribute no text website attribute no text notes attribute no text <p></p> attribute attribute attribute attribute attribute attribute attribute attribute attribute attribute attribute attribute attribute attribute        *title        (*Required)        doi         (optional)        authors        (optional)        journal        (optional)        publisher        (optional)        year        (optional)        volume        (optional)        issue        (optional)        pages        (optional)        issn        (optional)        arxiv_id        (optional)        pmid        (optional)        website        (optional)        notes        (optional)        Each title must be unique             your doi here             Author Here             Journal name             publisher name             year published             volume number             issue             pages             issn             arxiv_id             pmid             https://www.example.com             These are my notes      <p></p>"},{"location":"launch_gui_from_terminal/","title":"Alternative Way to Launch the Executable","text":"<p>In addition to launching the graphical user interface by downloading the correct file, and running it via double click, users can always launch the program via terminal.</p> <p>You may want to run the program via terminal for several reasons.</p> <p>Follow these steps to launch the program via terminal:</p> <ol> <li> <p>Download python 3.9 or higher</p> </li> <li> <p>Git clone the          master branch of the CRIPT Excel Uploader repository     </p> <pre><code>git clone https://github.com/C-Accel-CRIPT/cript-excel-uploader.git\n</code></pre> </li> <li> <p>Navigate to the repository that was just cloned</p> <pre><code>cd cript-excel-uploader\n</code></pre> </li> <li> <p>Create virtual environment for needed dependencies</p>  Windows Mac &amp;  Linux <pre><code>python -m venv .\\venv\n</code></pre> <pre><code>python3 -m venv ./venv\n</code></pre> </li> <li> <p>Activate virtual environment</p>  Windows Mac &amp;  Linux <pre><code>.\\venv\\Scripts\\activate\n</code></pre> <pre><code>source venv/bin/activate\n</code></pre> </li> <li> <p>Install needed dependencies</p> <pre><code>pip install -r requirements.txt\n</code></pre> </li> <li> <p>Navigate to directory</p>  Windows Mac &amp;  Linux <pre><code>cd .\\src\\\n</code></pre> <pre><code>cd src/\n</code></pre> </li> <li> <p>Run the GUI</p>  Windows Mac &amp;  Linux <pre><code>python gui_main.py\n</code></pre> <pre><code>python3 gui_main.py\n</code></pre> </li> </ol> <p>The CRIPT Excel Uploader graphical user interface should now be running</p> <p></p>"}]}